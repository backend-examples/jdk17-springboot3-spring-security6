<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <insert id="insertUser" parameterType="User">
        <selectKey keyProperty="userId" resultType="integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into tb_user values (#{userId}, #{realName}, #{username}, #{password}, #{sex}, #{age}, #{phone}, #{email}, #{audited}, #{deleted}, #{createTime}, #{updateTime})
    </insert>

    <resultMap type="User" id="userMap">
        <result property="userId" column="userId"/>
        <result property="realName" column="realName" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="age" column="age" />
        <result property="sex" column="sex" />
        <result property="audited" column="audited" />
        <result property="deleted" column="deleted" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
        <!-- column 为父子查询的公共字段。 select后为子查询的id -->
        <collection property="roleList" ofType="Role" column="userId" select="selectRoleListByRoleId">
            <id column="roleId" property="roleId"/>
            <result column="roleName" property="roleName" />
            <result column="remark" property="remark" />
            <result column="delFlag" property="delFlag" />
            <result column="createTime" property="createTime" />
            <result column="updateTime" property="updateTime" />
        </collection>
    </resultMap>

    <!--父查询-->
    <sql id="selectAllProperties">
        SELECT
            u.*
        FROM
            tb_user u
    </sql>
    
    <!--子查询，查询角色列表-->
    <select id="selectRoleListByRoleId" resultType="Role">
        select * from tb_role r
        left join tb_user_role u_r on u_r.roleId=r.roleId
        where u_r.userId=#{userId}
    </select>

    <select id="selectUserById" parameterType="int" resultMap="userMap">
        <include refid="selectAllProperties" />
        where u.userId= #{userId} and deleted=0
    </select>

    <select id="selectUserByUsername" parameterType="string" resultMap="userMap">
        <include refid="selectAllProperties"/>
        where username=#{username}  and deleted=0
    </select>

    <select id="selectUserByPhone" parameterType="string" resultMap="userMap">
        <include refid="selectAllProperties"/>
        where phone=#{phone} and deleted=0
    </select>

    <select id="selectUserByEmail" parameterType="string" resultMap="userMap">
        <include refid="selectAllProperties"/>
        where email=#{email} and deleted=0
    </select>

    <select id="selectUserListByKeyword" resultMap="userMap">
        <include refid="selectAllProperties" />
        <where>
            <if test="keyword != null">
                -- 字符串拼接，当有值为null时，拼接结果会为null
                upper (concat(ifnull(username, ''), ifnull(phone, ''), ifnull(email, ''))) LIKE upper (concat('%',#{keyword},'%'))
            </if>
            <if test="audited != null">
                and u.audited=#{audited}
            </if>
            <if test="createTime != null">
                and u.createTime like concat(#{createTime},'%')
            </if>
            and deleted=0
        </where>
    </select>

    <select id="selectUnAuditedUserById" resultMap="userMap">
        <include refid="selectAllProperties" />
        where userId=#{userId} and audited=1 and deleted=0
    </select>

    <sql id="updateUser">
        update tb_user set realName=#{realName}, username=#{username}, password=#{password}, sex=#{sex}, age=#{age}, phone=#{phone}, email=#{email}, audited=#{audited}, deleted=#{deleted}, updateTime = #{updateTime}
    </sql>

    <update id="updateUserInfoById" parameterType="User">
        <include refid="updateUser" />
        where userId=#{userId} and deleted=0
    </update>


    <update id="deleteUserById" parameterType="int">
        <include refid="updateUser" />
        where userId=#{userId} and deleted=0
    </update>
</mapper>